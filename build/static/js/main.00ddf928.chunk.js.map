{"version":3,"sources":["components/Cart/Checkout.module.css","components/Cart/Cart.module.css","components/Cart/CartItem.module.css","components/Layout/HeaderCartButton.module.css","components/Meals/AvailableMeals.module.css","components/Meals/MealItem/MealItem.module.css","components/UI/Modal.module.css","components/Layout/Header.module.css","components/UI/Card.module.css","components/UI/Input.module.css","components/Meals/MealItem/MealItemForm.module.css","components/Meals/MealsSummary.module.css","assets/meals.jpg","store/cart-context.js","components/Cart/CartIcon.js","components/Layout/HeaderCartButton.js","components/Layout/Header.js","components/UI/Card.js","components/UI/Input.js","components/Meals/MealItem/MealItemForm.js","components/Meals/MealItem/MealItem.js","components/Meals/AvailableMeals.js","components/Meals/MealsSummary.js","components/Meals/Meals.js","components/UI/Modal.js","components/Cart/CartItem.js","components/Cart/Checkout.js","components/Cart/Cart.js","store/CartProvider.js","App.js","index.js"],"names":["module","exports","CartContext","React","createContext","items","totalAmount","addItem","item","removeItem","id","clearCart","CartIcon","xmlns","viewBox","fill","d","HeaderCartButton","props","useState","btnIsHighlighted","setBtnIsHighlighted","useContext","numOfCartItems","reduce","currentNum","amount","buttonClasses","classes","button","bump","useEffect","length","timer","setTimeout","clearTimeout","className","onClick","icon","badge","Header","styles","header","onShowCart","src","mealsImage","alt","Card","card","children","Input","forwardRef","ref","input","htmlFor","label","MealItemForm","amountIsValid","setAmountIsValid","amountInputRef","useRef","form","onSubmit","event","preventDefault","enteredAmount","current","value","enteredAmountNum","trim","onAddToCart","type","min","max","step","defaultValue","MealItem","cartContext","price","toFixed","meal","name","description","validatedAmount","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","a","fetch","then","response","status","Error","json","key","responseData","loadedMeals","push","catch","error","message","MealsLoading","mealsError","mealsList","map","MealsSummary","summary","Meals","Backdrop","backdrop","onClose","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","CartItem","actions","onRemove","onAdd","isEmpty","Checkout","street","city","postalCode","formInputsValidity","setFormInputsValidity","nameInputRef","streetInputRef","cityInputRef","postalInputRef","nameControlClasses","control","invalid","streetControlClasses","cityControlClasses","postalControlClasses","enteredName","enteredStreet","enteredCity","enteredPostal","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalIsValid","onConfirm","onCancel","submit","Cart","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","containsItems","cartItemRemoveHandler","cartItemAddHandler","submitOrderHandler","userData","method","body","JSON","stringify","user","orderedItems","cartItems","bind","modalActions","cartModalContent","Fragment","total","isSubmittingModalContent","didSubmitModalContent","defaultCartState","cartReducer","state","action","identifier","updatedItems","existingCartItemIndex","findIndex","existingCartItem","updatedItem","concat","existingItem","updatedTotalAmount","filter","CartProvider","useReducer","cartState","dispatchCartAction","Provider","App","cartIsShown","setCartIsShown","render"],"mappings":"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","file":"static/js/main.00ddf928.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__26gr1\",\"control\":\"Checkout_control__2qGfb\",\"actions\":\"Checkout_actions__2X_6_\",\"submit\":\"Checkout_submit__2BFZZ\",\"invalid\":\"Checkout_invalid__2gAN9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__2pjQw\",\"total\":\"Cart_total__3pLin\",\"actions\":\"Cart_actions__1GOmr\",\"button--alt\":\"Cart_button--alt__1Z2QQ\",\"button\":\"Cart_button__fw1-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1B1_q\",\"summary\":\"CartItem_summary__3FMDj\",\"price\":\"CartItem_price__2Nl0j\",\"amount\":\"CartItem_amount__jUKEC\",\"actions\":\"CartItem_actions__UwVPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3CMOT\",\"icon\":\"HeaderCartButton_icon__9KWtg\",\"badge\":\"HeaderCartButton_badge__1Z3gL\",\"bump\":\"HeaderCartButton_bump__3atD4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"AvailableMeals_meals__2ZLCP\",\"meals-appear\":\"AvailableMeals_meals-appear__ONwLi\",\"MealsLoading\":\"AvailableMeals_MealsLoading__UmYIn\",\"mealsError\":\"AvailableMeals_mealsError__3Alfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meal\":\"MealItem_meal__2uJ70\",\"description\":\"MealItem_description__2YINS\",\"price\":\"MealItem_price__3sNYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1mfF6\",\"modal\":\"Modal_modal__4DXUe\",\"slide-down\":\"Modal_slide-down__W3MdX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__zSTUo\",\"main-image\":\"Header_main-image__2Q3So\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2swPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MealItemForm_form__32qVd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"MealsSummary_summary__22zUX\"};","export default __webpack_public_path__ + \"static/media/meals.2971f633.jpg\";","import React from \"react\";\n\nconst CartContext = React.createContext({\n    items: [],\n    totalAmount: 0,\n    addItem: (item) => {},\n    removeItem: (id) => {},\n    clearCart: () => {}\n});\n\nexport default CartContext;\n\n","const CartIcon = () => {\n    // This file is a component function that simply holds a SVG icon \n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\" />\n    </svg>\n  );\n};\n\nexport default CartIcon;\n","import { useContext, useEffect, useState } from \"react\";\n\nimport CartContext from \"../../store/cart-context\";\nimport CartIcon from \"../Cart/CartIcon\";\nimport classes from \"./HeaderCartButton.module.css\";\n\nconst HeaderCartButton = (props) => {\n\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\n\n  const cartContext = useContext(CartContext);\n\n  const { items } = cartContext; // using object destructuring to pull out only the items array from cartContext\n\n  const numOfCartItems = items.reduce((currentNum, item) => {\n    return currentNum + item.amount;\n  }, 0);\n  // by using array.reduce(), we can extract a single value for an array by \n  // selecting the total number of items where each cart item is just a single\n  // aggregate of its total number of pieces of that item \n\n\n  const buttonClasses = `${classes.button} ${btnIsHighlighted ? classes.bump : '' }`;\n\n  useEffect(() => {\n    if (items.length === 0) {\n      return;\n    } \n    setBtnIsHighlighted(true);\n\n    const timer = setTimeout(() => {\n      setBtnIsHighlighted(false);\n    }, 300);\n\n    return () => { // recall that any functions being returned in useEffect are called automatically as a \"cleanup\" function\n      clearTimeout(timer); // ensures that the Header's Add Cart button clears & bumps even if we \"spam\" the Add button very fast. \n    };\n\n  }, [items]);\n\n\n  return (\n    <button className={buttonClasses} onClick={props.onClick}>\n      <span className={classes.icon}>\n        <CartIcon />\n      </span>\n      <span>Your Cart</span>\n      <span className={classes.badge}>{numOfCartItems}</span>\n    </button>\n  );\n};\n\nexport default HeaderCartButton;\n","import React, { Fragment } from \"react\";\n\nimport styles from \"./Header.module.css\";\nimport mealsImage from \"../../assets/meals.jpg\";\nimport HeaderCartButton from \"./HeaderCartButton\";\n\nconst Header = (props) => {\n  return (\n    <Fragment>\n      <header className={styles.header}>\n        <h1>Dave's Meals</h1>\n        <HeaderCartButton onClick={props.onShowCart} />\n      </header>\n      <div className={styles[\"main-image\"]}>\n        <img src={mealsImage} alt=\"A table full of yummy food\" />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Header;\n","import classes from \"./Card.module.css\";\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\nimport styles from \"./Input.module.css\";\n\nconst Input = React.forwardRef((props, ref) => {\n  return (\n    <div className={styles.input}>\n      <label htmlFor={props.input.id}>{props.label}</label>\n      <input ref={ref} {...props.input} />\n      {/* NOTE: {...props.input} ensures that all the key-value pairs \n      on this input object are added as props to input. \n      So if there is additional props like {type=\"text\"} or other attributes, it's added! */}\n    </div>\n  );\n});\n\nexport default Input;\n","import { useRef, useState } from \"react\";\n\nimport Input from \"../../UI/Input\";\nimport styles from \"./MealItemForm.module.css\";\n\nconst MealItemForm = (props) => {\n  const [amountIsValid, setAmountIsValid] = useState(true);\n\n  const amountInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredAmount = amountInputRef.current.value;\n    const enteredAmountNum = +enteredAmount; // this converts our string to a number\n\n    if (\n      enteredAmount.trim().length === 0 ||\n      enteredAmountNum < 1 ||\n      enteredAmountNum > 5\n    ) {\n      setAmountIsValid(false);\n      return;\n    }\n\n    props.onAddToCart(enteredAmountNum);\n\n\n  };\n\n  return (\n    <form className={styles.form} onSubmit={submitHandler}>\n      <Input\n        ref={amountInputRef}\n        label=\"Amount\"\n        input={{\n          id: \"amount\" + props.id,\n          type: \"number\",\n          min: \"1\",\n          max: \"5\",\n          step: \"1\",\n          defaultValue: \"1\",\n          // NOTE: all these props^ are built-in props for all standard <input> tags in JS\n          // thus, we can use them in our custom <Input> component as well\n        }}\n      />\n      <button>Add To Cart</button>\n      {!amountIsValid && <p>Please enter a valid amount (1-5).</p>}\n    </form>\n  );\n};\n\nexport default MealItemForm;\n","import { useContext } from 'react';\n\nimport styles from './MealItem.module.css';\nimport MealItemForm from './MealItemForm';\nimport CartContext from '../../../store/cart-context';\n\nconst MealItem = (props) => {\n  const cartContext = useContext(CartContext);\n\n  const price = `$${props.price.toFixed(2)}`;\n  // toFixed(2) ensures that we always render 2 decimal places.\n  // Reminds me of .printf() in Java\n\n  const addToCartHandler = validatedAmount => {\n    cartContext.addItem({\n      id: props.id,\n      name: props.name,\n      amount: validatedAmount,\n      price: props.price\n    });\n  };\n\n\n  return (\n    <li className={styles.meal}>\n      <div>\n        <h3>{props.name}</h3>\n        <div className={styles.description}>{props.description}</div>\n        <div className={styles.price}>{price}</div>\n      </div>\n        <MealItemForm onAddToCart={addToCartHandler} />\n      <div>\n\n      </div>\n    </li>\n  );\n};\n\nexport default MealItem;\n","import { useEffect, useState } from \"react\";\nimport styles from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); // we want to start this componenet with rendering data from the DB, thus we want to show this\n  const [httpError, setHttpError] = useState(null);\n\n  useEffect(() => { // This will only run the 1st time the component is rendered\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-udemy-http-fd441-default-rtdb.firebaseio.com/meals.json').then();\n\n\n      if (response.status !== 200) {\n        throw new Error('Something went wrong!');\n        // by instantiating a new Error object, we give it default properties such as \"message\"\n      }\n\n      const responseData = await response.json();\n      \n  // ---- we need to transform our data \"object\" into an array of \"meals\"\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key, // the key will be the id of the invdivual meal we're fetching from the DB\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n\n      setMeals(loadedMeals); // update our empty array with the fetched data from the DB\n      setIsLoading(false); // done loading data from the DB\n    };\n \n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message); // we can invoke the built-in \"message\" property\n      }); // since fetchMeals() is an \"async\" function, it returns a \"promise\" and thus we can invoke the \"catch\" method directly (instead of wrapping this in a try catch block)\n  }, []);\n\n  if (isLoading) {\n    return (\n      <section className={styles.MealsLoading}>\n        <p> Loading...</p>\n      </section>\n    );\n  }\n\n  if (httpError) {\n    return (\n      <section className={styles.mealsError}>\n        <p>{httpError}</p>\n      </section>\n    )\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      //   meal={meal} // note that we can just pass a \"meal\" prop and chain.invoke it in the child MealItem along with props!!\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={styles.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n","import classes from './MealsSummary.module.css';\n\nconst MealsSummary = () => {\n  return (\n    <section className={classes.summary}>\n      <h2>Delicious Food, Delivered To You</h2>\n      <p>\n        Choose your favorite meal from our broad selection of available meals\n        and enjoy a delicious lunch or dinner at home.\n      </p>\n      <p>\n        All our meals are cooked with high-quality ingredients, just-in-time and\n        of course by experienced chefs!\n      </p>\n    </section>\n  );\n};\n\nexport default MealsSummary;","import { Fragment } from \"react\";\nimport AvailableMeals from \"./AvailableMeals\";\nimport MealsSummary from \"./MealsSummary\";\n\n\nconst Meals = () => {\n    return (\n        <Fragment>\n            <MealsSummary />\n            <AvailableMeals />\n        </Fragment>\n    );\n};\n\nexport default Meals;","import { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport classes from \"./Modal.module.css\";\n\nconst Backdrop = (props) => {\n  return <div className={classes.backdrop} onClick={props.onClose }/>;\n};\n\nconst ModalOverlay = (props) => {\n  return (\n    <div className={classes.modal}>\n      <div className={classes.content}>{props.children}</div>\n    </div>\n  );\n};\n\nconst portalElement = document.getElementById(\"overlays\");\n\nconst Modal = (props) => {\n  return (\n    <Fragment>\n      {ReactDOM.createPortal(<Backdrop onClose={props.onClose} />, portalElement)}\n      {ReactDOM.createPortal(\n        <ModalOverlay>{props.children}</ModalOverlay>,\n        portalElement)}\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","import classes from './CartItem.module.css';\n\nconst CartItem = (props) => {\n  const price = `$${props.price.toFixed(2)}`;\n\n  return (\n    <li className={classes['cart-item']}>\n      <div>\n        <h2>{props.name}</h2>\n        <div className={classes.summary}>\n          <span className={classes.price}>{price}</span>\n          <span className={classes.amount}>x {props.amount}</span>\n        </div>\n      </div>\n      <div className={classes.actions}>\n        <button onClick={props.onRemove}>−</button>\n        <button onClick={props.onAdd}>+</button>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;","import { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\n\n// -------- HELPER METHODS FOR FORM VALIDATION --------\nconst isEmpty = value => value.trim() === '';\nconst isValidPostalCode = value => value.trim().length === 5;\n\nconst Checkout = props => {\n    const [formInputsValidity, setFormInputsValidity] = useState({\n        name: true,\n        street: true,\n        city: true,\n        postalCode: true\n    });\n\n    const nameInputRef = useRef();\n    const streetInputRef = useRef();\n    const cityInputRef = useRef();\n    const postalInputRef = useRef();\n\n    const confirmHandler = event => {\n        event.preventDefault();\n\n        const enteredName = nameInputRef.current.value;\n        const enteredStreet = streetInputRef.current.value;\n        const enteredCity = cityInputRef.current.value;\n        const enteredPostal = postalInputRef.current.value;\n\n        const enteredNameIsValid = !isEmpty(enteredName); // if the enteredName is NOT empty, the entry is valid\n        const enteredStreetIsValid = !isEmpty(enteredStreet);\n        const enteredCityIsValid = !isEmpty(enteredCity);\n        const enteredPostalIsValid = isValidPostalCode(enteredPostal);\n\n        setFormInputsValidity({\n            name: enteredNameIsValid,\n            street: enteredStreetIsValid,\n            city: enteredCityIsValid,\n            postalCode: enteredPostalIsValid\n        });\n\n        const formIsValid = \n        enteredNameIsValid && enteredStreetIsValid && \n        enteredCityIsValid && enteredPostalIsValid;\n\n        if (!formIsValid) {\n            return;\n        }\n\n        props.onConfirm({\n            name: enteredName,\n            street: enteredStreet,\n            city: enteredCity,\n            postalCode: enteredPostal\n        });\n\n    };\n\n    const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`;\n\n    const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`;\n\n    const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`;\n\n    const postalControlClasses = `${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid}`;\n\n    return (\n        <form onSubmit={confirmHandler}>\n            <div className={nameControlClasses}>\n                <label htmlFor=\"name\">Your Name</label>\n                <input type=\"text\" id='name' ref={nameInputRef} />\n                { !formInputsValidity.name && <p>Please enter a valid name!</p>}\n            </div>\n            <div className={streetControlClasses}>\n                <label htmlFor=\"street\">Street</label>\n                <input type=\"text\" id='street' ref={streetInputRef} />\n                { !formInputsValidity.street && <p>Please enter a valid street!</p>}\n            </div>\n            <div className={cityControlClasses}>\n                <label htmlFor=\"city\">City</label>\n                <input type=\"text\" id='city' ref={cityInputRef} />\n                { !formInputsValidity.city && <p>Please enter a valid city!</p>}\n            </div>\n            <div className={postalControlClasses}>\n                <label htmlFor=\"postal\">Postal Code</label>\n                <input type=\"text\" id='postal' ref={postalInputRef} />\n                { !formInputsValidity.city && <p>Please enter a valid zip!</p>}\n            </div>\n            <div className={classes.actions}>\n              <button onClick={props.onCancel} type=\"button\">Cancel</button>\n              <button className={classes.submit}>Confirm</button>\n            </div>\n        </form>\n    );\n};\n\nexport default Checkout;","import React, { useContext, useState } from \"react\";\n\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\n\nconst Cart = (props) => {\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const cartContext = useContext(CartContext);\n\n  const totalAmount = `$${cartContext.totalAmount.toFixed(2)}`;\n\n  const containsItems = cartContext.items.length > 0;\n\n  const cartItemRemoveHandler = (id) => {\n    cartContext.removeItem(id);\n  };\n\n  const cartItemAddHandler = (item) => {\n    cartContext.addItem({ ...item, amount: 1 });\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const submitOrderHandler = async (userData) => {\n    setIsSubmitting(true);\n    await fetch(\n      \"https://react-udemy-http-fd441-default-rtdb.firebaseio.com/orders.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          user: userData,\n          orderedItems: cartContext.items,\n        }),\n      }\n    );\n    setIsSubmitting(false);\n    setDidSubmit(true);\n    cartContext.clearCart(); \n  };\n\n  const cartItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {cartContext.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n          // .bind() pre-configures a function for future execution\n          // by allowing us to pre-configure the argument the function will receive\n        />\n      ))}\n    </ul>\n  );\n\n  const modalActions = (\n    <div className={classes.actions}>\n      <button onClick={props.onClose} className={classes[\"button--alt\"]}>\n        Close\n      </button>\n      {containsItems && (\n        <button className={classes.button} onClick={orderHandler}>\n          Order\n        </button>\n      )}\n    </div>\n  );\n\n  const cartModalContent = (\n    <React.Fragment>\n      {cartItems}\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span>{totalAmount}</span>\n      </div>\n      {isCheckout && (\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />)}\n      {!isCheckout && modalActions}\n    </React.Fragment>\n  );\n\n  const isSubmittingModalContent = <p>Sending order data...</p>\n\n  const didSubmitModalContent = <React.Fragment>\n    <p>Success! We're working on your order now!</p>\n    <div className={classes.actions}>\n      <button onClick={props.onClose} className={classes.button}>\n        Close\n      </button>\n    </div>\n    </React.Fragment>\n\n  return <Modal onClose={props.onClose}>\n    { !isSubmitting && !didSubmit && cartModalContent }\n    { isSubmitting && isSubmittingModalContent }\n    { didSubmit && didSubmitModalContent }\n  </Modal>;\n};\n\nexport default Cart;\n","import { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [], // this is the total number of items in the shopping cart\n  totalAmount: 0, // this is the total price of the shopping cart\n};\n\nconst cartReducer = (state, action) => {\n  // cartReducer holds all the logic for adding an item to the cart\n  if (action.identifier === \"ADD\") {\n    \n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n      ); // findIndex() is a built-in JS function which finds the index of an item in an array\n         // so we find a specific element (item) in our array of items and Add / Remove it\n      const existingCartItem = state.items[existingCartItemIndex];\n      \n      let updatedItems;\n      \n      if (existingCartItem) {\n        const updatedItem = {\n          ...existingCartItem,\n          amount: existingCartItem.amount + action.item.amount\n        };\n        updatedItems = [...state.items];\n        updatedItems[existingCartItemIndex] = updatedItem;\n      } else {\n        updatedItems = state.items.concat(action.item); \n    // recall that concat() adds a new element to the array BUT generates a brand new array 'state-object'\n    }\n\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n\n  if (action.identifier === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n      ); \n      const existingItem = state.items[existingCartItemIndex];\n      const updatedTotalAmount = state.totalAmount - existingItem.price;\n      let updatedItems;\n      if (existingItem.amount === 1) { // if it's the last item of that type of food order / For ex) 1 Sushi\n        updatedItems = state.items.filter(item => item.id !== action.id);\n        // want to return a new array with filter() of all items that don't match the item.id with the action.id\n      } else {\n        const updatedItem = {...existingItem, amount: existingItem.amount - 1 };\n        updatedItems = [...state.items];\n        updatedItems[existingCartItemIndex] = updatedItem;\n      }\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount\n      };\n  }\n\n  if (action.type === 'CLEAR') {\n    return defaultCartState; // want to clear the cart !\n  }\n  \n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ identifier: \"ADD\", item: item });\n    // Generally, we name our object's 1st property 'identifier' or 'type'\n    // and we set the value to ALL CAPS String with a relavant name\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ identifier: \"REMOVE\", id: id });\n  };\n\n  const clearCartHandler = () => {\n    dispatchCartAction({identifier: 'CLEAR'});\n  }\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    clearCart: clearCartHandler\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n","import { useState } from \"react\";\n\nimport Header from \"./components/Layout/Header\";\nimport Meals from \"./components/Meals/Meals\";\nimport Cart from \"./components/Cart/Cart\";\nimport CartProvider from \"./store/CartProvider\";\n\nfunction App() {\n  const [cartIsShown, setCartIsShown] = useState(false);\n\n  const showCartHandler = () => {\n    setCartIsShown(true);\n  };\n\n  const hideCartHandler = () => {\n    setCartIsShown(false);\n  };\n\n  return (\n    <CartProvider>\n      {cartIsShown && <Cart onClose={hideCartHandler}/>}\n      <Header onShowCart={showCartHandler} />\n      <main>\n        <Meals />\n      </main>\n    </CartProvider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}